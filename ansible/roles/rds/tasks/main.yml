---
# tasks file for rds


- name: rds security group
  amazon.aws.ec2_security_group:
    name: "{{ env }}-rds-security-group"
    description: Fargate to RDS
    vpc_id: "{{ vpc_id }}"
    region: "{{ aws_region }}"
    rules:
      # 'ports' rule keyword was introduced in version 2.4. It accepts a single
      # port value or a list of values including ranges (from_port-to_port).
      - proto: tcp
        ports: 5432
        cidr_ip: 0.0.0.0/0
    tags:
      Environment: "{{ env }}"
      Name: "{{ env }}-task-app-rds-security-group"
      # Rule sources list support was added in version 2.4. This allows to
      # define multiple sources per source type as well as multiple source types per rule.
        # group_id:
        #   - sg-edcd9784 # create ecs fargate first?
  register: rds_sg

- name: RDS subnet group
  rds_subnet_group:
    state: present
    name: "{{ env }}-rds-subnets-group"
    description: List of subnets to associate with RDS
    region: "{{ aws_region }}"
    subnets: "{{ db_subnet_id_list }}"
    tags:
      Environment: "{{ env }}"
      Name: "{{ env }}-task-app-rds-subnet-group"
  register: rds_subnet_gp

- name: create RDS instance using new rds module
  rds_instance:
    allocated_storage: "{{ allocated_storage }}"
    multi_az: "{{ multi_az_bool }}"
    db_instance_class: "{{ db_instance_class }}"
    db_instance_identifier: "{{ env }}taskAppRDSID"
    db_name: "postgres"
    db_subnet_group_name: "{{ env }}-rds-subnets-group"
    engine: "postgres"
    engine_version: "13.8"
    master_user_password: "{{ lookup('aws_secret', db_pwd_secret_name, region=aws_region ) }}"
    master_username: "postgres"
    # max_allocated_storage: 100
    port: 5432
    region: "{{ aws_region }}"
    state: "present"
    storage_type: "{{ storage_type }}"
    enable_iam_database_authentication: yes
    apply_immediately: "{{ apply_immediately_bool }}"
    skip_final_snapshot: true
    # db_security_groups: ["{{ rds_sg.group_id }}"]
    vpc_security_group_ids: ["{{ rds_sg.group_id }}"]
    tags:
      Environment: "{{ env }}"
      Name: "{{ env }}-task-app-rds"
  run_once: true
  register: rds_instance_result
  ignore_errors: true
