---

- name: Log into ECR
  shell: docker login -u AWS -p $(aws ecr get-login-password --region {{ aws_region }}) {{ aws_account_id }}.dkr.ecr.{{ aws_region }}.amazonaws.com
  # shell: "$(aws ecr get-login-password --region {{ aws_region }} | docker login --username AWS  {{ aws_account_id }}.dkr.ecr.{{ aws_region }}.amazonaws.com ) --password-stdin" 

- name: Create ecr repo
  command: aws ecr create-repository --repository-name {{ repository_name}} --image-tag-mutability IMMUTABLE

- name: ecr docker get-authorization-token
  shell: "aws ecr get-authorization-token --region {{ app_region }}"
  register: ecr_command
  
- set_fact:
    ecr_authorization_data: "{{ (ecr_command.stdout | from_json).authorizationData[0] }}"
  
- set_fact:
    ecr_credentials: "{{ (ecr_authorization_data.authorizationToken | b64decode).split(':') }}"
  
- name: docker_repository - Log into ECR registry and force re-authorization
  docker_login:
    registry_url: "{{ ecr_authorization_data.proxyEndpoint.rpartition('//')[2] }}"
    reauthorize: yes
  when: ecr_credentials is defined


- name: Create image repo
  ecs_ecr:
    name:  "hello-from-the-other-side-{{ repository_name }}"
    region:  "{{ aws_region }}"
    state: present


# - name: Create ecr repo
#   community.aws.ecs_ecr:
#     name: "{{ repository_name }}"